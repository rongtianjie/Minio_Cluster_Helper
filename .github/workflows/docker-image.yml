name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 更新pip工具
    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    # 添加缓存步骤以加速Python依赖安装
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
      path: /root/.cache/pip
      key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      restore-keys: |
        ${{ runner.os }}-pip-

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/minio_cluster_helper:latest
          ${{ secrets.DOCKER_USERNAME }}/minio_cluster_helper:${{ github.sha }}

    - name: Install Python dependencies
      run: |
        docker run --rm -v $(pwd):/app -w /app python:3.11 pip install -r requirements.txt
      continue-on-error: true  # 如果依赖安装失败，不立即终止整个任务，以便后续步骤进行错误处理

    - name: Check Python dependencies installation status
      if: steps.InstallPythonDependencies.outcome!= 'success'
      run: |
        echo "Python dependencies installation failed. Please check the logs above for details."
        exit 1  # 如果依赖安装确实失败，手动终止任务并返回错误码
